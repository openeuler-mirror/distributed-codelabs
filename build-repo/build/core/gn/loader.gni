# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos_var.gni")

# load build configs and write load result to out_build_dir/build_configs
build_loader_script = rebase_path("//build/loader/load.py")

_platforms_config_file = "${preloader_output_dir}/platforms.build"

_subsystem_config_file = "${preloader_output_dir}/subsystem_config.json"

_exclusion_modules_config_file =
    "${preloader_output_dir}/exclusion_modules.json"

build_platform = ""

arguments = [
  "--subsystem-config-file",
  rebase_path(_subsystem_config_file),
  "--platforms-config-file",
  rebase_path(_platforms_config_file),
  "--exclusion-modules-config-file",
  rebase_path(_exclusion_modules_config_file),
  "--source-root-dir",
  rebase_path("//"),
  "--gn-root-out-dir",
  rebase_path(root_build_dir),
  "--target-os",
  target_os,
  "--target-cpu",
  target_cpu,
]

arguments += [
  "--os-level",
  os_level,
]

if (build_platform != "") {
  arguments += [
    "--build-platform-name",
    build_platform,
  ]
}

if (scalable_build) {
  arguments += [ "--scalable-build" ]
}

if (build_example) {
  arguments += [
    "--example-subsystem-file",
    rebase_path("//build/subsystem_config_example.json", "$root_out_dir"),
  ]
}
if (build_xts) {
  arguments += [ "--build-xts" ]
}

if (load_test_config) {
  arguments += [ "--load-test-config" ]
}

arguments += [
  "--ignore-api-check",
  "xts",
  "common",
  "developertest",
]

load_result = exec_script(build_loader_script, arguments, "string")

if (load_result != "") {
  print()
  print(load_result)
}

print("build configs generation is complete.")
