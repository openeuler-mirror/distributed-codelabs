# Copyright (c) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//build/ohos_var.gni")

config("distributed_store_config") {
  visibility = [ ":*" ]
  include_dirs =
      [ "//foundation/systemabilitymgr/samgr/services/samgr/native/include" ]
}

config("sam_config") {
  # header file path
  include_dirs = [
    "//foundation/systemabilitymgr/samgr/services/samgr/native/include",
    "//foundation/systemabilitymgr/samgr/services/dfx/include",
    "//foundation/systemabilitymgr/samgr/utils/native/include",
    "//foundation/systemabilitymgr/samgr/services/lsamgr/include",
    "//foundation/systemabilitymgr/samgr/interfaces/innerkits/common/include",
    "//foundation/systemabilitymgr/samgr/interfaces/innerkits/samgr_proxy/include",
  ]
}

ohos_executable("samgr") {
  install_enable = true
  sources = [
    "//foundation/systemabilitymgr/samgr/frameworks/native/source/system_ability_load_callback_stub.cpp",
    "//foundation/systemabilitymgr/samgr/services/dfx/source/hisysevent_adapter.cpp",
    "//foundation/systemabilitymgr/samgr/services/lsamgr/src/local_ability_manager_proxy.cpp",
    "//foundation/systemabilitymgr/samgr/services/samgr/native/source/ability_death_recipient.cpp",
    "//foundation/systemabilitymgr/samgr/services/samgr/native/source/main.cpp",
    "//foundation/systemabilitymgr/samgr/services/samgr/native/source/rpc_callback_imp.cpp",
    "//foundation/systemabilitymgr/samgr/services/samgr/native/source/system_ability_load_callback_proxy.cpp",
    "//foundation/systemabilitymgr/samgr/services/samgr/native/source/system_ability_manager.cpp",
    "//foundation/systemabilitymgr/samgr/services/samgr/native/source/system_ability_manager_stub.cpp",
    "//foundation/systemabilitymgr/samgr/services/samgr/native/source/system_ability_status_change_proxy.cpp",
    "//foundation/systemabilitymgr/samgr/utils/native/source/tools.cpp",
  ]

  deps = [ "//foundation/systemabilitymgr/samgr/interfaces/innerkits/common:samgr_common" ]

  configs = [
    ":sam_config",
    "//foundation/systemabilitymgr/samgr/interfaces/innerkits/common:config_samgr_common",
    "//foundation/systemabilitymgr/samgr/test/resource:coverage_flags",
    ":distributed_store_config",
  ]

  if (is_standard_system) {
    external_deps = [
      # "access_token:libaccesstoken_sdk",
      "c_utils:utils",
      "eventhandler:libeventhandler",
      # "hisysevent_native:libhisysevent",
      # "hitrace_native:hitrace_meter",
      "hiviewdfx_hilog_native:libhilog",
      "init:libbeget_proxy",
      "init:libbegetutil",
      "ipc:ipc_core",
      "ipc:libdbinder",
    ]

    if (build_selinux) {
      external_deps += [ "selinux:libservice_checker" ]
      defines = [ "WITH_SELINUX" ]
    }
    public_deps = [ "//third_party/libxml2:libxml2" ]
    part_name = "samgr"
  }
  subsystem_name = "systemabilitymgr"
}
