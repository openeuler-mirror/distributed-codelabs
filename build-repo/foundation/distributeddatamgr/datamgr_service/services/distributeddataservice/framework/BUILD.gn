# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
import("//build/ohos.gni")
import("//build/ohos_var.gni")

group("build_module") {
  deps = [ ":distributeddatasvcfwk" ]
}
config("module_public_config") {
  visibility = [ ":*" ]
  include_dirs = [
    "include",
    "//third_party/json/single_include",
    "//third_party/openssl/include/",
    "//foundation/distributeddatamgr/datamgr_service/services/distributeddataservice/adapter/include",
    "//foundation/distributeddatamgr/kv_store/frameworks/common",
    "//foundation/distributeddatamgr/kv_store/interfaces/innerkits/distributeddata/include",
    "//foundation/distributeddatamgr/kv_store/frameworks/libs/distributeddb/interfaces/include/",
    "//foundation/distributeddatamgr/kv_store/frameworks/libs/distributeddb/include/",
  ]
}

ohos_shared_library("distributeddatasvcfwk") {
  sources = [
    "backuprule/backup_rule_manager.cpp",
    "checker/checker_manager.cpp",
    "eventcenter/event.cpp",
    "eventcenter/event_center.cpp",
    "feature/feature_system.cpp",
    "metadata/appid_meta_data.cpp",
    "metadata/capability_meta_data.cpp",
    "metadata/capability_range.cpp",
    "metadata/corrupted_meta_data.cpp",
    "metadata/matrix_meta_data.cpp",
    "metadata/meta_data.cpp",
    "metadata/meta_data_manager.cpp",
    "metadata/secret_key_meta_data.cpp",
    "metadata/store_meta_data.cpp",
    "metadata/store_meta_data_local.cpp",
    "metadata/strategy_meta_data.cpp",
    "metadata/user_meta_data.cpp",
    "serializable/serializable.cpp",
    "utils/anonymous.cpp",
    "utils/block_integer.cpp",
    "utils/constant.cpp",
    "utils/converter.cpp",
    "utils/crypto.cpp",
  ]
  cflags = [ "-Wno-multichar",
  "-Wno-unqualified-std-cast-call",]

  cflags_cc = [ "-fvisibility=hidden" ]

  configs = [ ":module_public_config" ]

  deps = [ "//third_party/openssl:libcrypto_shared" ]

  external_deps = [ "hiviewdfx_hilog_native:libhilog" ]
  subsystem_name = "distributeddatamgr"

  part_name = "datamgr_service"
}
