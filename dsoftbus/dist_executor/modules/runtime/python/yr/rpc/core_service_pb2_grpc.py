# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from yr.rpc import core_service_pb2 as rpc_dot_core__service__pb2


class CoreServiceStub(object):
    """Core service provides APIs to runtime,
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Create = channel.unary_unary(
                '/core_service.CoreService/Create',
                request_serializer=rpc_dot_core__service__pb2.CreateRequest.SerializeToString,
                response_deserializer=rpc_dot_core__service__pb2.CreateResponse.FromString,
                )
        self.Invoke = channel.unary_unary(
                '/core_service.CoreService/Invoke',
                request_serializer=rpc_dot_core__service__pb2.InvokeRequest.SerializeToString,
                response_deserializer=rpc_dot_core__service__pb2.InvokeResponse.FromString,
                )
        self.Terminate = channel.unary_unary(
                '/core_service.CoreService/Terminate',
                request_serializer=rpc_dot_core__service__pb2.TerminateRequest.SerializeToString,
                response_deserializer=rpc_dot_core__service__pb2.TerminateResponse.FromString,
                )
        self.Exit = channel.unary_unary(
                '/core_service.CoreService/Exit',
                request_serializer=rpc_dot_core__service__pb2.ExitRequest.SerializeToString,
                response_deserializer=rpc_dot_core__service__pb2.ExitResponse.FromString,
                )
        self.SaveState = channel.unary_unary(
                '/core_service.CoreService/SaveState',
                request_serializer=rpc_dot_core__service__pb2.StateSaveRequest.SerializeToString,
                response_deserializer=rpc_dot_core__service__pb2.StateSaveResponse.FromString,
                )
        self.LoadState = channel.unary_unary(
                '/core_service.CoreService/LoadState',
                request_serializer=rpc_dot_core__service__pb2.StateLoadRequest.SerializeToString,
                response_deserializer=rpc_dot_core__service__pb2.StateLoadResponse.FromString,
                )
        self.Kill = channel.unary_unary(
                '/core_service.CoreService/Kill',
                request_serializer=rpc_dot_core__service__pb2.KillRequest.SerializeToString,
                response_deserializer=rpc_dot_core__service__pb2.KillResponse.FromString,
                )


class CoreServiceServicer(object):
    """Core service provides APIs to runtime,
    """

    def Create(self, request, context):
        """Create an instance for specify function
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Invoke(self, request, context):
        """invoke the created instance
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Terminate(self, request, context):
        """terminate the created instance
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Exit(self, request, context):
        """exit the created instance
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SaveState(self, request, context):
        """save state of the created instance
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LoadState(self, request, context):
        """load state of the created instance
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Kill(self, request, context):
        """Kill the signal to instance
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CoreServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Create': grpc.unary_unary_rpc_method_handler(
                    servicer.Create,
                    request_deserializer=rpc_dot_core__service__pb2.CreateRequest.FromString,
                    response_serializer=rpc_dot_core__service__pb2.CreateResponse.SerializeToString,
            ),
            'Invoke': grpc.unary_unary_rpc_method_handler(
                    servicer.Invoke,
                    request_deserializer=rpc_dot_core__service__pb2.InvokeRequest.FromString,
                    response_serializer=rpc_dot_core__service__pb2.InvokeResponse.SerializeToString,
            ),
            'Terminate': grpc.unary_unary_rpc_method_handler(
                    servicer.Terminate,
                    request_deserializer=rpc_dot_core__service__pb2.TerminateRequest.FromString,
                    response_serializer=rpc_dot_core__service__pb2.TerminateResponse.SerializeToString,
            ),
            'Exit': grpc.unary_unary_rpc_method_handler(
                    servicer.Exit,
                    request_deserializer=rpc_dot_core__service__pb2.ExitRequest.FromString,
                    response_serializer=rpc_dot_core__service__pb2.ExitResponse.SerializeToString,
            ),
            'SaveState': grpc.unary_unary_rpc_method_handler(
                    servicer.SaveState,
                    request_deserializer=rpc_dot_core__service__pb2.StateSaveRequest.FromString,
                    response_serializer=rpc_dot_core__service__pb2.StateSaveResponse.SerializeToString,
            ),
            'LoadState': grpc.unary_unary_rpc_method_handler(
                    servicer.LoadState,
                    request_deserializer=rpc_dot_core__service__pb2.StateLoadRequest.FromString,
                    response_serializer=rpc_dot_core__service__pb2.StateLoadResponse.SerializeToString,
            ),
            'Kill': grpc.unary_unary_rpc_method_handler(
                    servicer.Kill,
                    request_deserializer=rpc_dot_core__service__pb2.KillRequest.FromString,
                    response_serializer=rpc_dot_core__service__pb2.KillResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'core_service.CoreService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CoreService(object):
    """Core service provides APIs to runtime,
    """

    @staticmethod
    def Create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/core_service.CoreService/Create',
            rpc_dot_core__service__pb2.CreateRequest.SerializeToString,
            rpc_dot_core__service__pb2.CreateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Invoke(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/core_service.CoreService/Invoke',
            rpc_dot_core__service__pb2.InvokeRequest.SerializeToString,
            rpc_dot_core__service__pb2.InvokeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Terminate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/core_service.CoreService/Terminate',
            rpc_dot_core__service__pb2.TerminateRequest.SerializeToString,
            rpc_dot_core__service__pb2.TerminateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Exit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/core_service.CoreService/Exit',
            rpc_dot_core__service__pb2.ExitRequest.SerializeToString,
            rpc_dot_core__service__pb2.ExitResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SaveState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/core_service.CoreService/SaveState',
            rpc_dot_core__service__pb2.StateSaveRequest.SerializeToString,
            rpc_dot_core__service__pb2.StateSaveResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LoadState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/core_service.CoreService/LoadState',
            rpc_dot_core__service__pb2.StateLoadRequest.SerializeToString,
            rpc_dot_core__service__pb2.StateLoadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Kill(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/core_service.CoreService/Kill',
            rpc_dot_core__service__pb2.KillRequest.SerializeToString,
            rpc_dot_core__service__pb2.KillResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
